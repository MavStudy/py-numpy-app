# Функции формирования числовых диапазонов
import numpy as np


def main():
    # Функция arrange довольно часто применяется в программах на Python.
    # Она позволяет проходить заданный интервал с указанным шагом.
    #
    # Обратите внимание, в отличие от функции range языка Python в arrange
    # пакета NumPy можно указывать вещественные значения. Вот еще один пример,
    # демонстрирующий это:

    a = np.arange(0, np.pi, 0.1)  # Здесь все величины вещественные. Мы
    # начинаем движение от значения 0 с шагом 0,1 пока не дойдем до значения
    # пи (не включая его).

    # И, далее, используя этот массив, можно вычислить синус или косинус
    # от всех этих значений:
    b = np.cos(a)  # result = np.cos(np.arrange(0, np.pi, 0.1))

    # Видите, как это удобно. Без пакета NumPyнам пришлось бы писать цикл
    # и делать вычисление для каждого значения аргумента. А здесь мы сразу
    # получаем готовый массив значений функции косинуса. Это работает гораздо
    # быстрее циклов в Python.

    print(b)
    # [ 1.          0.99500417  0.98006658  0.95533649  0.92106099  0.87758256
    #   0.82533561  0.76484219  0.69670671  0.62160997  0.54030231  0.45359612
    #   0.36235775  0.26749883  0.16996714  0.0707372  -0.02919952 -0.12884449
    #   -0.22720209 -0.32328957 -0.41614684 -0.5048461  -0.58850112 -0.66627602
    #   -0.73739372 -0.80114362 -0.85688875 -0.90407214 -0.94222234 -0.97095817
    #   -0.9899925  -0.99913515]


if __name__ == '__main__':
    main()
