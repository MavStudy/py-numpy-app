# NumPy - Множества (unique) и операции над ними
import numpy as np


def separator(sep='-'):
    print(sep * 70)


def array_info(name, arr):
    print(
        f"массив {name}:",
        type(arr),
        id(arr),
        arr.shape
    )


def main():
    # В множествах все значения должны быть уникальными и представленными
    # в единственном варианте.
    # Чтобы преобразовать массив a в множество используется функция unique.
    # Функция unique также может работать и с многомерными массивами. Например:
    x = np.array([[0, 1, 1, 2], [0, 1, 1, 2], [9, 1, 1, 2]])
    array_info('x', x)
    print(x)
    # массив x: <class 'numpy.ndarray'> 1889228648688 (3, 4)
    # [[0 1 1 2]
    #  [0 1 1 2]
    #  [9 1 1 2]]

    separator()

    print(np.unique(x))
    # [0 1 2 9]

    # То есть, она просматривает весь массив x и оставляет только уникальные
    # значения. На выходе формируется обычный одномерный массив.

    separator()

    # Однако, здесь мы можем дополнительно указывать оси, по которым будет
    # происходить отбор уникальных значений, например, так:
    print(np.unique(x, axis=0))
    # [[0 1 1 2]
    #  [9 1 1 2]]

    # Здесь использовалась первая ось, то есть, определялись уникальные строки.

    separator()

    # Если указать вторую ось:
    print(np.unique(x, axis=1))
    # [[0 1 2]
    #  [0 1 2]
    #  [9 1 2]]

    # то получим уникальные столбцы.

    separator()


if __name__ == '__main__':
    main()
