# NumPy - Транслирование массивов
import numpy as np


def separator(sep='-'):
    print(sep * 70)


def array_info(name, arr):
    print(
        f"массив {name}:",
        type(arr),
        id(arr),
        arr.shape
    )


def main():
    # Давайте теперь посмотрим, как работает этот механизм с многомерными
    # массивами.Для начала положим, что имеется двумерный и одномерный
    # массивы:
    a = np.arange(1, 10).reshape(3, 3)
    array_info('a', a)
    print(a)
    # массив a: <class 'numpy.ndarray'> 41901104 (3, 3)
    # [[1 2 3]
    #  [4 5 6]
    #  [7 8 9]]

    separator()

    b = np.array([4, 5, 6])
    array_info('b', b)
    print(b)
    # массив b: <class 'numpy.ndarray'> 42800016 (3,)
    # [4 5 6]

    separator()

    # Попробуем их сложить:
    print(a + b)
    # [[ 5  7  9]
    #  [ 8 10 12]
    #  [11 13 15]]

    # С точки зрения математики такая операция невозможна. Но в NumPy она
    # легко вычисляется. Как вы догадались, все дело в механизме
    # транслирования. Согласно первому правилу размерность массива b была
    # увеличена до двух, причем, добавлена именно первая ось – axis0:
    #
    # a: 3 x 3
    # b: 1 x 3
    #
    # А, затем, по второму правилу, число элементов вдоль оси axis0
    # массива b было доведено до трех:
    #
    # Транслирование_массива_b

    # Теперь, никаких проблем в сложении данных нет, и получаем искомый
    # результат. Фактически, так работает механизм транслирования массивов
    # при любых размерностях.

    separator()

    # Ниже рассмотрим несколько примеров.
    a1 = np.arange(6).reshape(3, 1, 2)
    array_info('a1', a1)
    print(a1)
    # массив a1: <class 'numpy.ndarray'> 161766256 (3, 1, 2)
    # [[[0 1]]
    #
    #  [[2 3]]
    #
    #  [[4 5]]]

    separator()

    b1 = np.ones(4).reshape(2, 2)
    array_info('b1', b1)
    print(b1)
    # массив b1: <class 'numpy.ndarray'> 161766160 (2, 2)
    # [[1. 1.]
    #  [1. 1.]]

    separator()

    # result1 = a * b
    # array_info('result1', result1)
    # print(result1)
    print(a * b)
    # массив result1: <class 'numpy.ndarray'> 161766352 (3, 3)
    # [[ 4 10 18]
    #  [16 25 36]
    # [28 40 54]]

    separator()



if __name__ == '__main__':
    main()
