# NumPy - Произведение матриц и векторов, элементы линейной алгебры
import numpy as np


def separator(sep='-'):
    print(sep * 70)


def array_info(name, arr):
    print(
        f"массив {name}:",
        type(arr),
        id(arr),
        arr.shape
    )


def main():
    # Пришло время познакомиться с одной из фундаментальных возможностей
    # пакета NumPy–матричных и векторных вычислений.

    a = np.arange(1, 10).reshape(3, 3)
    b = np.arange(10, 19).reshape(3, 3)

    # Если нам нужно выполнить именно матричное умножение, то есть, строки
    # одной матрицы умножать на столбцы другой и результаты складывать,
    # то для этого следует использовать специальные функции и операторы.

    # Начнем с функций. Итак, чтобы перемножить две матрицы a и b по всем
    # правилам математики, запишем следующую команду:
    res1 = np.dot(a, b)
    array_info('res1', res1)
    print(res1)
    # массив res1: <class 'numpy.ndarray'> 2246436134832 (3, 3)
    # [[ 84  90  96]
    #  [201 216 231]
    #  [318 342 366]]

    separator()

    # Тот же результат можно получить и с помощью функции:
    res2 = np.matmul(a, b)
    array_info('res2', res2)
    print(res2)
    # массив res2: <class 'numpy.ndarray'> 1899313373296 (3, 3)
    # [[ 84  90  96]
    #  [201 216 231]
    #  [318 342 366]]

    # Считается, что этот вариант предпочтительнее
    # использовать при умножении матриц !!!

    separator()


if __name__ == '__main__':
    main()
