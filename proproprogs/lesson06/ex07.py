# NumPy - Объединение и разделение массивов
import numpy as np


def separator():
    print('-' * 70)


def main():
    # Массивы в NumPy можно не только объединять, но и разделять. Для этого
    # существуют специальные функции hsplit и vsplit. Рассмотрим их работу на
    # простых примерах. Пусть имеется одномерный массив из 10 элементов:
    a = np.arange(10)
    print(
        "массив a",
        id(a),
        a.shape
    )
    print(a)

    separator()

    # И мы хотим разделить его на две равные части. Это реализуется с помощью
    # функции hsplit:
    res_lst = np.hsplit(a, 2)
    print(res_lst)
    print(res_lst[0])
    print(res_lst[1])
    # которая возвращает список из двух массивов. Второй параметр 2 указывает
    # число частей, на которые делится исходный массив. Причем, деление
    # выполняется по горизонтали.

    # Если в нашем примере указать 3 части, то
    # возникнет ошибка:
    # np.hsplit(a, 3)  # ошибка 10 на 3 нацело не делится
    # так как 10 элементов нельзя равномерно разбить на 3 части.

    # Также ошибка будет и при разбиении этого массива по вертикали:
    # np.vsplit(a, 2)  # ошибка: нет вертикальной оси
    # так как массив имеет одну горизонтальную ось.

    # Чтобы вторая функция сработала, преобразуем массив a в вектор столбец:
    a.shape = 10, -1  # вектор-столбец
    print(
        "массив a",
        id(a),
        a.shape
    )
    print(a)

    separator()

    # а, затем, разобьем по вертикали:
    res_lst2 = np.vsplit(a, 2)
    print(res_lst2)
    # На выходе получим два одномерных массива длиной 5 элементов.
    print('--*--' * 14)
    print(res_lst2[0])
    print('--*--' * 14)
    print(res_lst2[1])

    separator()

    # Эти же функции можно использовать и с многомерными массивами,
    # например, так:
    b = np.arange(12)
    print(b)
    b.resize(2, 6)  # двумерный массив 2х6
    print(b)

    res_div_b_h = np.hsplit(b, 2)  # разбиение по горизонтали
    res_div_b_v = np.vsplit(b, 2)  # разбиение по вертикали
    print(res_div_b_h)
    print(res_div_b_v)

    separator()

    # Функция array_split
    #
    # Рассмотренные функции выполняют разбиение или по первой оси axis0 или
    # по второй оси axis1. Но что если нам нужно выполнить разбиение по
    # произвольной оси многомерного массива? Для этого существует функция
    # array_split(). Ее работа аналогична рассмотренным выше функциям, только
    # дополнительно указывается ось разбиения. Например:
    c = np.arange(18)
    print(c)
    c.resize(3, 3, 2)
    print(c)

    print('--*--' * 14)

    res_div_c_1 = np.array_split(c, 2, axis=2)
    print(res_div_c_1)

    print('--*--' * 14)

    res_div_c_2 = np.array_split(c, 3, axis=0)
    print(res_div_c_2)

    print('--*--' * 14)

    res_div_c_3 = np.array_split(c, 3, axis=1)
    print(res_div_c_3)


if __name__ == '__main__':
    main()
